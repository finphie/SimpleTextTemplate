<#@ template language="C#" linePragmas="false" #>
using System;
using System.Buffers;

namespace SimpleTextTemplate
{
    /// <summary>
    /// テンプレートをレンダリングするクラスです。
    /// </summary>
    static partial class ZTemplate
    {
        /// <summary>
        /// テンプレートをレンダリングして、<see cref="IBufferWriter{Byte}"/>に書き込みます。
        /// </summary>
        /// <param name="bufferWriter">ターゲットの<see cref="IBufferWriter{Byte}"/></param>
        /// <param name="context">コンテキスト</param>
        public static void Generate<#= FileName #>Template(IBufferWriter<byte> bufferWriter, IContext context)
        {
<# foreach (var (type, range) in GetBlocks()) { #>
<# if (type == BlockType.Raw) { #>
            bufferWriter.Write(new byte[] { <#= ToHexString(range) #> });
<# } else if (type == BlockType.Identifier) { #>
            if (context.TryGetValue(new byte[] { <#= ToHexString(range) #> }, out var value))
            {
                bufferWriter.Write(value.AsSpan());
            }
<# } #>
<# } #>
        }
    }
}
